
enum 类型 {
    T(Int)
}

func 斐波那契数列(第几个数: Int) -> Int {
    var 前一个 = 0
    var 后一个 = 1
    var 计数器 = 1
    while 计数器 < 第几个数 {
        中间 := 前一个 + 后一个
        前一个 = 后一个
        后一个 = 中间
        计数器 = 计数器 + 1
    }
    前一个
}

func 相加(左: Int, 右: Int) -> Int {
    左 + 右
}

func 打印(self: Int) {
    print(self)
}

func 类型::方法() -> 类型 {
    类型::T(1)
}

func init {
    答案 := 斐波那契数列(15)
    相加(答案, 42).打印()
    falsex := false
    if falsex {
        truey := true
        print("aa")
    }
    😅 := 114514
    print(😅)
}

enum 测试枚举 {
  E无
  E有(String)
}

func to_string(self: 测试枚举) -> String {
  match self {
    测试枚举::E无 => "None"
    测试枚举::E有(t) => "Some(\(t))"
  }
}